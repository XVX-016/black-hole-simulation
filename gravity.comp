#version 430
layout(local_size_x = 16) in;

layout(std140, binding = 3) buffer Objects {
    int   numObjects;
    vec4  posRadius[16];
    vec4  color[16];
    float mass[16];
    vec3  velocity[16];
};

uniform float G;
uniform float dt;

void main() {
    uint i = gl_GlobalInvocationID.x;
    if (i >= numObjects) return;

    vec3 acc = vec3(0.0);
    for (int j = 0; j < numObjects; ++j) {
        if (i == j) continue;
        vec3 dir = posRadius[j].xyz - posRadius[i].xyz;
        float dist = length(dir);
        if (dist > 0.0) {
            float force = G * mass[i] * mass[j] / (dist * dist);
            acc += force / mass[i] * normalize(dir);
        }
    }
    velocity[i] += acc * dt;
    posRadius[i].xyz += velocity[i] * dt;
}